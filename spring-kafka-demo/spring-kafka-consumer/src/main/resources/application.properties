server.port = 8089
spring.application.name = spring-kafka-consumer

# druid config
spring.druid.name = mysql_druid
spring.druid.type = com.alibaba.druid.pool.DruidDataSource
spring.druid.filters = stat,wall
spring.druid.initial-size = 10
spring.druid.min-idle = 10
spring.druid.max-active = 20
spring.druid.max-wait = 60000
spring.druid.time-between-eviction-runs-millis = 60000
spring.druid.min-evictable-idle-time-millis = 300000
spring.druid.validation-query = SELECT 'x'
spring.druid.test-while-idle = true
spring.druid.test-on-borrow = false
spring.druid.test-on-return = false
spring.druid.pool-prepared-statements = false
spring.druid.max-pool-prepared-statement-per-connection-size = 20

# sql config
spring.datasource.url = jdbc:mysql://localhost:3306/local_learn?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.username = root
spring.datasource.password = root

# mybatis config
mybatis-plus.mapper-locations = classpath:mapper/*.xml
mybatis-plus.type-aliases-package = com.philosopherzb.springkafka.domain

# kafka consumer config
spring.kafka.consumer.bootstrap-servers = localhost:9092
#spring.kafka.consumer.key-deserializer= = org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer= = org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.client-id = kafka-demo
# config partition.assignment.strategy; override @KafkaListener.properties
#spring.kafka.consumer.properties.partition.assignment.strategy = org.apache.kafka.clients.consumer.StickyAssignor

# kafka listener config
spring.kafka.listener.ack-mode = manual
# kafka topic config(map, eg: k = test, v = testTopic)
config.test-topic = testTopic
config.demo-topic = demoTopic
config.listener-id = spring-kafka-listener
config.retries = 3